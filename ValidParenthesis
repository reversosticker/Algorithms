Problem Statement..
Given a string s containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.
An input string is valid if:
Open brackets must be closed by the same type of brackets.
Open brackets must be closed in the correct order.

Input: s = "()"
Output: true


class Solution {
    public boolean isValid(String s) {
        
        Stack<Character> stack  = new Stack<>();
        for(int i=0;i<s.length();i++){
            //if s is empty then 
            if(s.charAt(i)=='{' || s.charAt(i)=='[' || s.charAt(i)=='('){
                stack.push(s.charAt(i));
            }else{
               //check that whether top is empty or not
                if(stack.size()==0)
                    return false;
                if((stack.peek()=='{' && s.charAt(i)=='}') || (stack.peek()=='[' && s.charAt(i)==']') || (stack.peek()=='(' && s.charAt(i)==')')){
                    stack.pop();
                    continue;
                }else{
                    return false;
                }
                    
            }
        }
        if(stack.size()>0){
            return false;
        }
        return true;
    }
}
